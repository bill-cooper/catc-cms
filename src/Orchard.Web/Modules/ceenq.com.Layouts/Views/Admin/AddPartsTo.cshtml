@model Orchard.ContentTypes.ViewModels.AddPartsViewModel
@{
    Style.Require("ContentTypesAdmin");
    Layout.Title = T("Add Parts To \"{0}\"", Model.Type.DisplayName).ToString();


    var parts = Model.PartSelections.ToList();
    
    var isAdmin = String.Equals(WorkContext.CurrentUser.UserName, WorkContext.CurrentSite.SuperUser, StringComparison.Ordinal);
    if (!isAdmin)
    {
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Admin Menu"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Content Body"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Disable Theme"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Element Wrapper"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Identity"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Menu"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Navigation"));
        parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Widget"));
        //removing for now
        //parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Containable"));
        //parts.Remove(parts.FirstOrDefault(part => part.PartDisplayName == "Container"));
    }

}
@T("Choose the Parts to add to this Content Type.")
@using (Html.BeginFormAntiForgeryPost())
{
    @Html.ValidationSummary()
    <fieldset>
        @Html.UnorderedList(
             parts,
            (partSelection, i) =>
            {
                var fieldNameStart = "PartSelections[" + i + "].";
                var fieldId = ViewData.TemplateInfo.GetFullHtmlFieldId(fieldNameStart + "IsSelected");
                return MvcHtmlString.Create(
                    string.Format(
                        "{0} <label for=\"{1}\" class=\"forcheckbox\">{2}</label>{3}{4}",
                        Html.CheckBox(fieldNameStart + "IsSelected"),
                        fieldId,
                        partSelection.PartDisplayName,
                        !string.IsNullOrWhiteSpace(partSelection.PartDescription) ? string.Format("<label for=\"{0}\" class=\"part hint\">{1}</label>", fieldId, partSelection.PartDescription) : "",
                        Html.Hidden(fieldNameStart + "PartName", partSelection.PartName)));

            },
            "available-parts")
    </fieldset>
    <fieldset>
        <button class="primaryAction" type="submit">@T("Save")</button>
    </fieldset>
}